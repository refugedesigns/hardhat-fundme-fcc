{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__CallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotEnoughETH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9b26fec0ef62628386685c861a19172bccc32c72f6d419ebf4390e7746a776b9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "819271",
    "logsBloom": "0x
    "blockHash": "0xcc01c52132ab32d43d2061454c5662c526c18984f446e5392747895e976166c9",
    "transactionHash": "0x9b26fec0ef62628386685c861a19172bccc32c72f6d419ebf4390e7746a776b9",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "819271",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "e55b6535d2771f21c631b2971766d378",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotEnoughETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotEnoughETH();\\nerror FundMe__CallFailed();\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 internal constant MINIMUM_USD = 50 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private  s_priceFeed;\\n\\n   modifier onlyOwner {\\n        if(msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // if money is sent without calling fund function\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n \\n    function fund() public payable {\\n        if(msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD) {\\n            revert FundMe__NotEnoughETH();\\n        }\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    } \\n\\n    function withdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        if(!callSuccess) {\\n            revert FundMe__CallFailed();\\n        }\\n    }\\n\\n    function getOwner() public view returns(address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns(address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\",\"keccak256\":\"0x9e859cd1f9586e9c94c12cc7c67ad36328ffaee0a804a1fa980d2786e6138949\",\"license\":\"UNLICENSED\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\npragma solidity ^0.8.9;\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        // ABI\\n        // address 0x78F9e60608bF48a1155b4B2A5e31F32318a1d85F\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\n        return uint256 (price * 1e10);\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUSD;\\n    }\\n}\",\"keccak256\":\"0x9417363c9f80361bf697e47feecd939fb02f59bdd9c6c12478b7b27d05a076c7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ece380380610ece83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d6f61015f6000396000818161031501526105b20152610d6f6000f3fe6080604052600436106100595760003560e01c80630343fb25146100725780633a7b6c74146100af5780633ccfd60b146100ec578063893d20e8146101035780639e87a5cd1461012e578063b60d42881461015957610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b50610099600480360381019061009491906107e6565b610283565b6040516100a6919061082c565b60405180910390f35b3480156100bb57600080fd5b506100d660048036038101906100d19190610873565b6102cc565b6040516100e391906108af565b60405180910390f35b3480156100f857600080fd5b50610101610313565b005b34801561010f57600080fd5b506101186105ae565b60405161012591906108af565b60405180910390f35b34801561013a57600080fd5b506101436105d6565b6040516101509190610929565b60405180910390f35b610161610163565b005b6802b5e3af16b18800006101a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461060090919063ffffffff16565b10156101da576040517fb514e4ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082815481106102e1576102e0610944565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610398576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561041b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103d1575b5050505050905060005b81518110156104a657600082828151811061044357610442610944565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049e906109a2565b915050610425565b50600067ffffffffffffffff8111156104c2576104c16109eb565b5b6040519080825280602002602001820160405280156104f05781602001602082028036833780820191505090505b50600090805190602001906105069291906106dc565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052d90610a4b565b60006040518083038185875af1925050503d806000811461056a576040519150601f19603f3d011682016040523d82523d6000602084013e61056f565b606091505b50509050806105aa576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008061060c8361063c565b90506000670de0b6b3a764000085836106259190610a60565b61062f9190610ae9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068557600080fd5b505afa158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd9190610ba7565b5050509150506402540be400816106d49190610c22565b915050919050565b828054828255906000526020600020908101928215610755579160200282015b828111156107545782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106fc565b5b5090506107629190610766565b5090565b5b8082111561077f576000816000905550600101610767565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b382610788565b9050919050565b6107c3816107a8565b81146107ce57600080fd5b50565b6000813590506107e0816107ba565b92915050565b6000602082840312156107fc576107fb610783565b5b600061080a848285016107d1565b91505092915050565b6000819050919050565b61082681610813565b82525050565b6000602082019050610841600083018461081d565b92915050565b61085081610813565b811461085b57600080fd5b50565b60008135905061086d81610847565b92915050565b60006020828403121561088957610888610783565b5b60006108978482850161085e565b91505092915050565b6108a9816107a8565b82525050565b60006020820190506108c460008301846108a0565b92915050565b6000819050919050565b60006108ef6108ea6108e584610788565b6108ca565b610788565b9050919050565b6000610901826108d4565b9050919050565b6000610913826108f6565b9050919050565b61092381610908565b82525050565b600060208201905061093e600083018461091a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ad82610813565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109e0576109df610973565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a35600083610a1a565b9150610a4082610a25565b600082019050919050565b6000610a5682610a28565b9150819050919050565b6000610a6b82610813565b9150610a7683610813565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aaf57610aae610973565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610af482610813565b9150610aff83610813565b925082610b0f57610b0e610aba565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b3981610b1a565b8114610b4457600080fd5b50565b600081519050610b5681610b30565b92915050565b6000819050919050565b610b6f81610b5c565b8114610b7a57600080fd5b50565b600081519050610b8c81610b66565b92915050565b600081519050610ba181610847565b92915050565b600080600080600060a08688031215610bc357610bc2610783565b5b6000610bd188828901610b47565b9550506020610be288828901610b7d565b9450506040610bf388828901610b92565b9350506060610c0488828901610b92565b9250506080610c1588828901610b47565b9150509295509295909350565b6000610c2d82610b5c565b9150610c3883610b5c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c7757610c76610973565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610cb457610cb3610973565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610cf157610cf0610973565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d2e57610d2d610973565b5b82820290509291505056fea2646970667358221220a11f679dc2dcad8fbd4642818c8193494fe458a3c2fd738f87159bab6ff269b864736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80630343fb25146100725780633a7b6c74146100af5780633ccfd60b146100ec578063893d20e8146101035780639e87a5cd1461012e578063b60d42881461015957610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b50610099600480360381019061009491906107e6565b610283565b6040516100a6919061082c565b60405180910390f35b3480156100bb57600080fd5b506100d660048036038101906100d19190610873565b6102cc565b6040516100e391906108af565b60405180910390f35b3480156100f857600080fd5b50610101610313565b005b34801561010f57600080fd5b506101186105ae565b60405161012591906108af565b60405180910390f35b34801561013a57600080fd5b506101436105d6565b6040516101509190610929565b60405180910390f35b610161610163565b005b6802b5e3af16b18800006101a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461060090919063ffffffff16565b10156101da576040517fb514e4ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082815481106102e1576102e0610944565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610398576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561041b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103d1575b5050505050905060005b81518110156104a657600082828151811061044357610442610944565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049e906109a2565b915050610425565b50600067ffffffffffffffff8111156104c2576104c16109eb565b5b6040519080825280602002602001820160405280156104f05781602001602082028036833780820191505090505b50600090805190602001906105069291906106dc565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052d90610a4b565b60006040518083038185875af1925050503d806000811461056a576040519150601f19603f3d011682016040523d82523d6000602084013e61056f565b606091505b50509050806105aa576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008061060c8361063c565b90506000670de0b6b3a764000085836106259190610a60565b61062f9190610ae9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068557600080fd5b505afa158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd9190610ba7565b5050509150506402540be400816106d49190610c22565b915050919050565b828054828255906000526020600020908101928215610755579160200282015b828111156107545782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106fc565b5b5090506107629190610766565b5090565b5b8082111561077f576000816000905550600101610767565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b382610788565b9050919050565b6107c3816107a8565b81146107ce57600080fd5b50565b6000813590506107e0816107ba565b92915050565b6000602082840312156107fc576107fb610783565b5b600061080a848285016107d1565b91505092915050565b6000819050919050565b61082681610813565b82525050565b6000602082019050610841600083018461081d565b92915050565b61085081610813565b811461085b57600080fd5b50565b60008135905061086d81610847565b92915050565b60006020828403121561088957610888610783565b5b60006108978482850161085e565b91505092915050565b6108a9816107a8565b82525050565b60006020820190506108c460008301846108a0565b92915050565b6000819050919050565b60006108ef6108ea6108e584610788565b6108ca565b610788565b9050919050565b6000610901826108d4565b9050919050565b6000610913826108f6565b9050919050565b61092381610908565b82525050565b600060208201905061093e600083018461091a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ad82610813565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109e0576109df610973565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a35600083610a1a565b9150610a4082610a25565b600082019050919050565b6000610a5682610a28565b9150819050919050565b6000610a6b82610813565b9150610a7683610813565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aaf57610aae610973565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610af482610813565b9150610aff83610813565b925082610b0f57610b0e610aba565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b3981610b1a565b8114610b4457600080fd5b50565b600081519050610b5681610b30565b92915050565b6000819050919050565b610b6f81610b5c565b8114610b7a57600080fd5b50565b600081519050610b8c81610b66565b92915050565b600081519050610ba181610847565b92915050565b600080600080600060a08688031215610bc357610bc2610783565b5b6000610bd188828901610b47565b9550506020610be288828901610b7d565b9450506040610bf388828901610b92565b9350506060610c0488828901610b92565b9250506080610c1588828901610b47565b9150509295509295909350565b6000610c2d82610b5c565b9150610c3883610b5c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c7757610c76610973565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610cb457610cb3610973565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610cf157610cf0610973565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d2e57610d2d610973565b5b82820290509291505056fea2646970667358221220a11f679dc2dcad8fbd4642818c8193494fe458a3c2fd738f87159bab6ff269b864736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 75,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}